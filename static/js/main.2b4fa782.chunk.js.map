{"version":3,"sources":["Map.js","Placeholder.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["SetViewOnSelectWatcher","selected","mqttData","map","useMap","console","log","Object","keys","length","position","getLatLon","jdata","latlon","setView","getZoom","animate","string","undefined","str","lastIndexOf","substring","slice","split","parseFloat","Map","props","access","watchers","useState","setMqttData","md5","require","useEffect","idAccess","id","topics","watcher","topic","options","clientId","password","username","id_user","connectTimeout","client","mqtt","on","forEach","element","subscribe","error","message","newData","JSON","parse","toString","find","imei","imei_md5","replaceAll","res","assign","unsubscribe","end","initialPosition","InitialMarker","wathcerImei","show","data","Marker","Popup","name","phone","datepoint","speedkph","pwr_ext","MapContainer","center","zoom","scrollWheelZoom","style","height","width","TileLayer","url","attribution","d","coord","Placeholder","content","isLoading","type","color","className","Dashboard","onClick","htmlFor","class","xmlns","fill","viewBox","stroke-linecap","stroke-linejoin","strokeWidth","children","w","icon","faAddressCard","App","token","location","useLocation","history","useHistory","isFetching","state","setState","queryParams","URLSearchParams","search","a","fetch","method","mode","headers","then","json","catch","e","resultAccess","status","resultWatcher","has","get","replace","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b4fa782.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.css'\r\nimport \"leaflet-defaulticon-compatibility\";\r\nimport * as mqtt from 'mqtt';\r\n\r\nfunction SetViewOnSelectWatcher({selected,mqttData}) {\r\n    const map = useMap()\r\n    console.log(\"MOOOVE\")\r\n    console.log(selected)\r\n    // if(selected){\r\n   \r\n    // }\r\n    if(Object.keys(mqttData).length == 0){\r\n        if(selected){\r\n            const position = getLatLon(selected.jdata.latlon)\r\n            map.setView(position, map.getZoom(), {\r\n                animate: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfunction getLatLon(string){\r\n    if (string != undefined) {\r\n        const str = string.lastIndexOf('(')\r\n        const coord = string.substring(str + 1).slice(0, -1).split(` `).map(str => {\r\n            return parseFloat(str)\r\n        })\r\n        return coord\r\n    } else {\r\n        return [40.8054, -74.0241]\r\n    }\r\n}\r\n\r\n\r\nfunction Map(props) {\r\n    const access = props.access\r\n    const watchers = props.watchers\r\n    const [mqttData, setMqttData] = useState({});\r\n    const selected = props.selected\r\n    // useEffect(() => {\r\n    //     console.log(\"MOOOVE\")\r\n    //     console.log(selected)\r\n    // },[selected])\r\n\r\n    var md5 = require('md5');\r\n\r\n    useEffect(() => {\r\n        const idAccess = access.id\r\n        const topics = watchers.map(watcher => {\r\n            return `debug/${watcher.topic}/addr/1`\r\n        })\r\n        const idUser = access.id_user\r\n        const options = {\r\n            clientId: idAccess,\r\n            password: idAccess,\r\n            username: idUser,\r\n            connectTimeout: 500,\r\n        }\r\n        var client = mqtt.connect(\"wss://skifgate.ru/ws\", options)\r\n        client.on('connect', function () {\r\n            topics.forEach(element => {\r\n                console.log(`subscribe to ${element}`)\r\n                client.subscribe(element)\r\n            });\r\n        })\r\n\r\n        client.on('error', function (error) {\r\n            console.error(error);\r\n        })\r\n\r\n        client.on('message', function (topic, message) {\r\n            // message is Buffer\r\n            const newData = JSON.parse(message.toString())\r\n            const watcher = watchers.find(element => {\r\n                const wa = md5(element.jdata.imei.toString())\r\n                const we = newData.imei_md5.replaceAll('-', '')\r\n                return wa == we\r\n            })\r\n            newData.watcher = watcher\r\n            const imei = newData.imei_md5\r\n            const res = Object.assign({\r\n                [imei]: newData\r\n            }, mqttData)\r\n            console.log(res)\r\n            setMqttData(res)\r\n        })\r\n        return () => {\r\n            if (client) {\r\n                topics.forEach(element => {\r\n                    client.unsubscribe(element);\r\n                })\r\n                client.end(client);\r\n            }\r\n        };\r\n    }, [access, watchers])\r\n\r\n    const initialPosition = getLatLon(watchers[0].jdata.latlon)\r\n\r\n    function InitialMarker(props) {\r\n        const watcher = props.watcher;\r\n        const position = getLatLon(watcher.jdata.latlon)\r\n        const element = watcher.jdata\r\n        const wathcerImei = md5(watcher.jdata.imei.toString())\r\n        var show = true\r\n\r\n        Object.keys(mqttData).forEach(data => {\r\n            var imei = data.replaceAll('-', '')\r\n            if (imei == wathcerImei) {\r\n                show = false\r\n            }\r\n        })\r\n\r\n        if (!show) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <Marker\r\n                position={position}\r\n                animate={false}\r\n            >\r\n                <Popup>\r\n                    <ul>\r\n                        <li key={watcher.name} >\r\n                            <b>Имя</b>: {watcher.name}\r\n                        </li>\r\n                        <li key={watcher.phone} >\r\n                            <b>Телефон</b>: {watcher.phone}\r\n                        </li>\r\n                        <li key={element.datepoint} >\r\n                            Время: {element.datepoint}\r\n                        </li>\r\n                        <li key={element.speedkph}>\r\n                            Скорость: {element.speedkph}\r\n                        </li>\r\n                        <li key={element.pwr_ext}>\r\n                            Заряд: {element.pwr_ext}\r\n                        </li>\r\n                    </ul>\r\n                </Popup>\r\n            </Marker>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <MapContainer center={initialPosition} zoom={5} scrollWheelZoom={true} style={{ height: \"100%\", width: \"100%\" }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n            <SetViewOnSelectWatcher selected={selected} mqttData={mqttData}/>\r\n            {\r\n                watchers.map(d => {\r\n                    return <InitialMarker watcher={d}></InitialMarker>\r\n                })\r\n            }\r\n\r\n            {\r\n                Object.keys(mqttData).map(data => {\r\n                    const element = mqttData[data]\r\n                    const latlon = element.latlon\r\n                    if (latlon != undefined) {\r\n                        const str = latlon.lastIndexOf('(')\r\n                        const coord = getLatLon(latlon)\r\n\r\n                        return (\r\n                            <Marker\r\n                                position={coord}\r\n                                animate={false}\r\n                            >\r\n                                <Popup>\r\n                                    <ul>\r\n                                        <li key={element.watcher.name} >\r\n                                            <b>Имя</b>: {element.watcher.name}\r\n                                        </li>\r\n                                        <li key={element.watcher.phone} >\r\n                                            <b>Телефон</b>: {element.watcher.phone}\r\n                                        </li>\r\n                                        <li key={element.datepoint} >\r\n                                            Время: {element.datepoint}\r\n                                        </li>\r\n                                        <li key={element.speedkph}>\r\n                                            Скорость: {element.speedkph}\r\n                                        </li>\r\n                                        <li key={element.pwr_ext}>\r\n                                            Заряд: {element.pwr_ext}\r\n                                        </li>\r\n                                    </ul>\r\n                                </Popup>\r\n                            </Marker>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </MapContainer>\r\n    )\r\n}\r\nexport default Map;\r\n\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Placeholder(props) {\r\n\r\n    var content\r\n    if (props.isLoading) {\r\n        content = <div>\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n            <p className=\"text-lg\">Загрузка...</p>\r\n        </div>\r\n\r\n    }\r\n    else { content = <p className=\"text-red-500 md:antialiased text-lg\">{props.message}</p> }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\r\n            <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\r\n                <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\r\n                    <div className=\"max-w-md mx-auto\">\r\n                        {\r\n                            content\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAddressCard } from '@fortawesome/free-solid-svg-icons'\r\nexport default function Dashboard(props) {\r\n    const watchers = props.watchers\r\n    const onClick = props.onClick\r\n\r\n    return (\r\n        <div className=\" shadow bg-base-200 drawer drawer-mobile h-screen\">\r\n            <input id=\"my-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <div className=\"flex flex-col drawer-content\">\r\n                <div className=\"navbar bg-base-300 lg:hidden\">\r\n                    <div className=\"flex-none \">\r\n                        <label htmlFor=\"my-drawer\" class=\"btn btn-square btn-ghost\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"inline-block w-6 h-6 stroke-current\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\r\n                            </svg>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"flex flex-row items-center h-8\">\r\n                        <div className=\"text-sm font-light tracking-wide text-white-400 uppercase\">Метки</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"h-full\">\r\n                    {props.children}\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"drawer-side\">\r\n                <label htmlFor=\"my-drawer\" className=\"drawer-overlay\"></label>\r\n                <ul className=\"menu p-4 overflow-y-auto w-80 bg-base-100 text-base-content\">\r\n                         <li className=\"px-5 hidden lg:block\">\r\n                                  <div className=\"flex flex-row items-center h-8\">\r\n                                      <div className=\"text-sm font-light tracking-wide text-white-400 uppercase\">Метки</div>\r\n                                  </div>\r\n                        </li>\r\n                    {watchers.map(w => {\r\n                        return (\r\n                            <li>\r\n                                <button htmlFor=\"my-drawer\" className= \"w-full relative flex flex-row items-center h-11 focus:outline-none hover:bg-blue-800 dark:hover:bg-gray-600 text-white-600 hover:text-white-800 border-l-4 border-transparent hover:border-blue-500 dark:hover:border-gray-800 pr-6\"\r\n                                    onClick={() => {\r\n                                        onClick(w)\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    <span className=\"inline-flex justify-center items-center ml-4 w-5 h-5\">\r\n                                        {<FontAwesomeIcon icon={faAddressCard} />}\r\n                                    </span>\r\n                                    {/* <i class=\"fas fa-address-card w-5 h-5 ml-4\"></i> */}\r\n                                    <span className=\"ml-2 text-sm tracking-wide truncate\">{w.name}</span>\r\n                                </button>\r\n                            </li>\r\n\r\n                        )\r\n                    })}\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}","import './App.css';\nimport 'leaflet/dist/leaflet.css'\nimport React, { useEffect, useState } from 'react';\nimport Map from './Map'\nimport Placeholder from './Placeholder';\nimport Dashboard from './Dashboard';\nimport { useHistory, useLocation } from 'react-router-dom'\n\n// localhost:3000?token=SjHhug\nfunction App() {\n  const moment = require('moment');\n  const location = useLocation()\n  const history = useHistory()\n  const [state, setState] = useState({\n    data: {}, isFetching: true,selected: {}\n  })\n  var token \n  // const [selectedWatcher, selectWatcher] = useState({})\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search)\n    if (queryParams.has('token')) {\n      token = queryParams.get('token')\n      // queryParams.delete('token')\n      history.replace({\n        search: queryParams.toString(),\n      })\n    }else {\n      setState({\n        data: {}, isFetching: false, error: {\n          message: \"Отсутствует токен доступа в запросе\"\n        }\n      })\n      return\n    }\n  \n    async function fetchData() {\n      // For production\n      // const res = await fetch(\"https://skifgate.ru/api/watchers\",\n      const watchers = await fetch(\"https://skifgate.ru/api/watchers\",\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'token': token,\n            'Access-Control-Allow-Origin': '*'\n          }\n        }).then(res => res.json()).catch(e => {\n          console.log(e);\n          setState({\n            data: Object.assign({\n              watchers: null\n            }, state.data),\n            isFetching: false,\n          })\n        })\n\n      const access = await fetch(\"https://skifgate.ru/api/acces\",\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'token': token,\n            'Access-Control-Allow-Origin': '*'\n          }\n        }).then(res => res.json()).catch(e => {\n          console.log(e);\n          setState({\n            data: Object.assign({\n              access: null\n            }, state.data),\n            isFetching: false,\n          })\n        })\n      var resultAccess\n      if (!access) {\n        resultAccess = null\n      } else if (access.status == false) {\n        resultAccess = null\n      } else resultAccess = access\n\n      var resultWatcher\n      console.log(watchers)\n      if (!watchers) {\n        console.log('first')\n        resultWatcher = null\n      } else if (watchers.status == false) {\n        console.log('second')\n        resultWatcher = null\n      } else{\n        console.log('third')\n        resultWatcher = watchers\n      } \n    \n      setState(\n        {\n          data: {\n            access: resultAccess,\n            watchers: resultWatcher\n          },\n          isFetching: false\n        })\n    }\n    fetchData();\n  }, [])\n\n  const { data, isFetching } = state\n  console.log('data')\n  console.log(data)\n  if (state.error) return <Placeholder message={state.error.message} />;\n  if (isFetching) return <Placeholder isLoading={true} />;\n  if (data.access == null) return <Placeholder message=\"Отсутствует доступ\" />;\n  if (data.watchers == null) return <Placeholder message=\"Не было найдено активный наблюдателей\" />;\n\n\n  const onClick = (w) => {\n    console.log('Click')\n    // console.log(w)\n    setState(\n      Object.assign({\n        selected : w\n      },state)\n    )\n  }\n\n  return (<Dashboard watchers={data.watchers} onClick = {onClick} >\n    <Map token={token} access={data.access} watchers={data.watchers} selected = {state.selected}></Map>\n  </Dashboard>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n        <Router>\n          <App />\n        </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}